{"version":3,"sources":["webpack:///./src/pages/communication/all.html.js","webpack:///./src/components/TitleAndMetaTags/index.js","webpack:///./src/components/TitleAndMetaTags/TitleAndMetaTags.js","webpack:///./src/site-constants.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/AllBlogPosts/index.js","webpack:///./src/components/AllBlogPosts/AllBlogPosts.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","d","pageQuery","components_AllBlogPosts__WEBPACK_IMPORTED_MODULE_1__","AllCommunicationPosts","_ref","data","location","createElement","blogType","_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_0__","TitleAndMetaTags","react_helmet__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_0___default","n","title","ogDescription","ogUrl","a","property","content","urlRoot","slackWebHook","_Header__WEBPACK_IMPORTED_MODULE_0__","Header","children","css","Object","assign","color","colors","darkBlue","marginRight","fonts","header","_AllBlogPosts__WEBPACK_IMPORTED_MODULE_0__","AllBlogPosts","gatsby__WEBPACK_IMPORTED_MODULE_0__","components_Layout__WEBPACK_IMPORTED_MODULE_1__","components_Container__WEBPACK_IMPORTED_MODULE_2__","components_Header__WEBPACK_IMPORTED_MODULE_3__","components_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_4__","site_constants__WEBPACK_IMPORTED_MODULE_6__","theme__WEBPACK_IMPORTED_MODULE_7__","templates_components_MetaTitle__WEBPACK_IMPORTED_MODULE_8__","sharedStyles","articleLayout","container","display","flexWrap","marginLeft","allMarkdownRemark","edges","map","_ref2","_ref3","node","paddingLeft","paddingTop","borderTop","paddingBottom","width","media","size","greaterThan","key","fields","slug","fontSize","lineHeight","fontWeight","borderBottom",":hover","borderBottomColor","black","to","frontmatter","date"],"mappings":"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","file":"component---src-pages-communication-all-html-js-dd481d41240c1f67f9c9.js","sourcesContent":["// @flow\n\nimport React from 'react';\nimport AllBlogPosts from 'components/AllBlogPosts';\nimport type {allMarkdownRemarkData} from 'types';\nimport {graphql} from 'gatsby';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n};\n\nconst AllCommunicationPosts = ({data, location}: Props) => (\n  <AllBlogPosts blogType={'communication'} data={data} location={location} />\n);\n\nexport const pageQuery = graphql`\n  query AllCommunicationPostsPageQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/communication/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllCommunicationPosts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport TitleAndMetaTags from './TitleAndMetaTags';\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport Helmet from 'react-helmet';\nimport React from 'react';\n\nconst defaultDescription = 'Blog học tiếng Anh.';\n\ntype Props = {\n  title: string,\n  ogDescription: string,\n  ogUrl: string,\n};\n\nconst TitleAndMetaTags = ({title, ogDescription, ogUrl}: Props) => {\n  return (\n    <Helmet title={title}>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      {ogUrl && <meta property=\"og:url\" content={ogUrl} />}\n      <meta property=\"og:image\" content=\"/logo-og.png\" />\n      <meta\n        property=\"og:description\"\n        content={ogDescription || defaultDescription}\n      />\n      <meta property=\"fb:app_id\" content=\"273901263318307\" />\n    </Helmet>\n  );\n};\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @providesModule site-constants\n * @flow\n */\n\n// NOTE: We can't just use `location.toString()` because when we are rendering\n// the SSR part in node.js we won't have a proper location.\nconst urlRoot = 'https://www.thaoanvo.com';\nconst babelURL = 'https://unpkg.com/babel-standalone@6.26.0/babel.min.js';\nconst slackWebHook =\n  'https://hooks.slack.com/services/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';\n\nexport {urlRoot, babelURL, slackWebHook};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\nimport {colors, fonts} from 'theme';\n\nimport type {Node} from 'react';\n\nconst Header = ({children}: {children: Node}) => (\n  <h1\n    css={{\n      color: colors.darkBlue,\n      marginRight: '5%',\n      ...fonts.header,\n    }}>\n    {children}\n  </h1>\n);\n\nexport default Header;\n","// @flow\n\nimport AllBlogPosts from './AllBlogPosts';\n\nexport default AllBlogPosts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport {Link} from 'gatsby';\nimport Layout from 'components/Layout';\nimport Container from 'components/Container';\nimport Header from 'components/Header';\nimport TitleAndMetaTags from 'components/TitleAndMetaTags';\nimport React from 'react';\nimport {urlRoot} from 'site-constants';\nimport {colors, media, sharedStyles} from 'theme';\nimport MetaTitle from 'templates/components/MetaTitle';\n\nimport type {allMarkdownRemarkData} from 'types';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n  blogType: string,\n};\n\nconst AllBlogPosts = ({data, location, blogType}: Props) => (\n  <Layout location={location}>\n    <Container>\n      <div css={sharedStyles.articleLayout.container}>\n        <div css={sharedStyles.articleLayout.content}>\n          <Header>All Posts</Header>\n          <TitleAndMetaTags\n            ogUrl={`${urlRoot}/${blogType}/all.html`}\n            title=\"React - All Posts\"\n          />\n          <ul\n            css={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              marginLeft: -40,\n            }}>\n            {data.allMarkdownRemark.edges.map(({node}) => (\n              <li\n                css={{\n                  paddingLeft: 40,\n                  paddingTop: 40,\n                  borderTop: '1px dotted #ececec',\n                  paddingBottom: 40,\n                  width: '100%',\n\n                  [media.size('medium')]: {\n                    width: '50%',\n                  },\n\n                  [media.greaterThan('large')]: {\n                    width: '33.33%',\n                  },\n                }}\n                key={node.fields.slug}>\n                <h2\n                  css={{\n                    fontSize: 24,\n                    color: colors.darkBlue,\n                    lineHeight: 1.3,\n                    fontWeight: 700,\n                  }}>\n                  <Link\n                    css={{\n                      borderBottom: '1px solid #ececec',\n                      ':hover': {\n                        borderBottomColor: colors.black,\n                      },\n                    }}\n                    key={node.fields.slug}\n                    to={node.fields.slug}>\n                    {node.frontmatter.title}\n                  </Link>\n                </h2>\n                <MetaTitle>{node.fields.date}</MetaTitle>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Container>\n  </Layout>\n);\n\nexport default AllBlogPosts;\n"],"sourceRoot":""}