{"version":3,"sources":["webpack:///./src/pages/vocabulary/all.html.js","webpack:///./src/components/TitleAndMetaTags/index.js","webpack:///./src/components/TitleAndMetaTags/TitleAndMetaTags.js","webpack:///./src/site-constants.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/Header/Header.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/utils/toCommaSeparatedList.js","webpack:///./src/components/AllBlogPosts/index.js","webpack:///./src/components/AllBlogPosts/AllBlogPosts.js"],"names":["__webpack_require__","r","__webpack_exports__","Glamor","d","pageQuery","components_AllBlogPosts__WEBPACK_IMPORTED_MODULE_1__","AllVocabularyPosts","_ref","data","location","createElement","blogType","_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_0__","TitleAndMetaTags","react_helmet__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_0___default","n","title","ogDescription","ogUrl","a","property","content","urlRoot","babelURL","_Header__WEBPACK_IMPORTED_MODULE_0__","Header","children","css","Object","assign","color","colors","dark","marginRight","fonts","header","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","addString","list","string","push","key","length","toCommaSeparatedList","array","renderCallback","map","forEach","item","index","_AllBlogPosts__WEBPACK_IMPORTED_MODULE_0__","AllBlogPosts","components_Layout__WEBPACK_IMPORTED_MODULE_2__","components_Container__WEBPACK_IMPORTED_MODULE_3__","sharedStyles","articleLayout","container","components_Header__WEBPACK_IMPORTED_MODULE_4__","components_TitleAndMetaTags__WEBPACK_IMPORTED_MODULE_5__","display","flexWrap","marginLeft","allMarkdownRemark","edges","_ref2","_ref3","node","paddingLeft","paddingTop","borderTop","paddingBottom","width","media","size","greaterThan","fields","slug","fontSize","lineHeight","fontWeight","gatsby__WEBPACK_IMPORTED_MODULE_1__","borderBottom",":hover","borderBottomColor","black","to","frontmatter","templates_components_MetaTitle__WEBPACK_IMPORTED_MODULE_10__","date","author","subtle","marginTop","name"],"mappings":"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","file":"component---src-pages-vocabulary-all-html-js-9d657ae16570454eed45.js","sourcesContent":["// @flow\n\nimport React from 'react';\nimport AllBlogPosts from 'components/AllBlogPosts';\nimport type {allMarkdownRemarkData} from 'types';\nimport {graphql} from 'gatsby';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n};\n\nconst AllVocabularyPosts = ({data, location}: Props) => (\n  <AllBlogPosts blogType={'vocabulary'} data={data} location={location} />\n);\n\nexport const pageQuery = graphql`\n  query AllVocabularyPostsPageQuery {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/vocabulary/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            author {\n              frontmatter {\n                name\n                url\n              }\n            }\n          }\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllVocabularyPosts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport TitleAndMetaTags from './TitleAndMetaTags';\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport Helmet from 'react-helmet';\nimport React from 'react';\n\nconst defaultDescription = 'A JavaScript library for building user interfaces';\n\ntype Props = {\n  title: string,\n  ogDescription: string,\n  ogUrl: string,\n};\n\nconst TitleAndMetaTags = ({title, ogDescription, ogUrl}: Props) => {\n  return (\n    <Helmet title={title}>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      {ogUrl && <meta property=\"og:url\" content={ogUrl} />}\n      <meta property=\"og:image\" content=\"/logo-og.png\" />\n      <meta\n        property=\"og:description\"\n        content={ogDescription || defaultDescription}\n      />\n      <meta property=\"fb:app_id\" content=\"623268441017527\" />\n    </Helmet>\n  );\n};\n\nexport default TitleAndMetaTags;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @providesModule site-constants\n * @flow\n */\n\n// NOTE: We can't just use `location.toString()` because when we are rendering\n// the SSR part in node.js we won't have a proper location.\nconst urlRoot = 'https://reactjs.org';\nconst babelURL = 'https://unpkg.com/babel-standalone@6.26.0/babel.min.js';\n\nexport {urlRoot, babelURL};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport Header from './Header';\n\nexport default Header;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\nimport {colors, fonts} from 'theme';\n\nimport type {Node} from 'react';\n\nconst Header = ({children}: {children: Node}) => (\n  <h1\n    css={{\n      color: colors.dark,\n      marginRight: '5%',\n      ...fonts.header,\n    }}>\n    {children}\n  </h1>\n);\n\nexport default Header;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport React from 'react';\n\nimport type {Node} from 'react';\n\nconst addString = (list: Array<Node>, string: string) =>\n  list.push(<span key={`${list.length}-${string}`}>{string}</span>);\n\nconst toCommaSeparatedList = (\n  array: Array<any>,\n  renderCallback: Function,\n): Array<any> => {\n  if (array.length <= 1) {\n    return array.map(renderCallback);\n  }\n\n  const list = [];\n\n  array.forEach((item, index) => {\n    if (index === array.length - 1) {\n      addString(list, array.length === 2 ? ' and ' : ', and ');\n      list.push(renderCallback(item, index));\n    } else if (index > 0) {\n      addString(list, ', ');\n      list.push(renderCallback(item, index));\n    } else {\n      list.push(renderCallback(item, index));\n    }\n  });\n\n  return list;\n};\n\nexport default toCommaSeparatedList;\n","// @flow\n\nimport AllBlogPosts from './AllBlogPosts';\n\nexport default AllBlogPosts;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n * @flow\n */\n\nimport {Link} from 'gatsby';\nimport Layout from 'components/Layout';\nimport Container from 'components/Container';\nimport Header from 'components/Header';\nimport TitleAndMetaTags from 'components/TitleAndMetaTags';\nimport React from 'react';\nimport {urlRoot} from 'site-constants';\nimport {colors, media, sharedStyles} from 'theme';\nimport toCommaSeparatedList from 'utils/toCommaSeparatedList';\nimport MetaTitle from 'templates/components/MetaTitle';\n\nimport type {allMarkdownRemarkData} from 'types';\n\ntype Props = {\n  data: allMarkdownRemarkData,\n  location: Location,\n  blogType: string,\n};\n\nconst AllBlogPosts = ({data, location, blogType}: Props) => (\n  <Layout location={location}>\n    <Container>\n      <div css={sharedStyles.articleLayout.container}>\n        <div css={sharedStyles.articleLayout.content}>\n          <Header>All Posts</Header>\n          <TitleAndMetaTags\n            ogUrl={`${urlRoot}/${blogType}/all.html`}\n            title=\"React - All Posts\"\n          />\n          <ul\n            css={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              marginLeft: -40,\n            }}>\n            {data.allMarkdownRemark.edges.map(({node}) => (\n              <li\n                css={{\n                  paddingLeft: 40,\n                  paddingTop: 40,\n                  borderTop: '1px dotted #ececec',\n                  paddingBottom: 40,\n                  width: '100%',\n\n                  [media.size('medium')]: {\n                    width: '50%',\n                  },\n\n                  [media.greaterThan('large')]: {\n                    width: '33.33%',\n                  },\n                }}\n                key={node.fields.slug}>\n                <h2\n                  css={{\n                    fontSize: 24,\n                    color: colors.dark,\n                    lineHeight: 1.3,\n                    fontWeight: 700,\n                  }}>\n                  <Link\n                    css={{\n                      borderBottom: '1px solid #ececec',\n                      ':hover': {\n                        borderBottomColor: colors.black,\n                      },\n                    }}\n                    key={node.fields.slug}\n                    to={node.fields.slug}>\n                    {node.frontmatter.title}\n                  </Link>\n                </h2>\n                <MetaTitle>{node.fields.date}</MetaTitle>\n                {node.frontmatter.author ? (\n                  <div\n                    css={{\n                      color: colors.subtle,\n                      marginTop: -5,\n                    }}>\n                    by{' '}\n                    {toCommaSeparatedList(node.frontmatter.author, author => (\n                      <span key={author.frontmatter.name}>\n                        {author.frontmatter.name}\n                      </span>\n                    ))}\n                  </div>\n                ) : null}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Container>\n  </Layout>\n);\n\nexport default AllBlogPosts;\n"],"sourceRoot":""}